We want an attendence system. Student can create their own profile.
Admin can see a list of students and their attendence. Admin can 
enable and disable attendence button also this button can be disable
based on a timer. Each time admin enable attend button, students can
participate for only once. Each day, students will have a timesheet
of attendence

Student can see their own time logs and attend button when enable


-- Functional requirements --

Admin
 - We will generate super admin during application installation
 - Admin can create students
 - Admin can delete, uodate or check student information
 - Admin can change status of a student
 - Admin can check time sheet of a student
 - Admin can enable or disable attendence button
 - Admin can check stats of a given day

Student
 - Studeent can register themselve
 - There will be following account status 
    - Pending
    - Active
    - Reject
 - User can login with their credentials
 - Pending & rejected users won't do anything in their profile
 - Active users can update their profile info
    - First name
    - Last name
    - Email
    - Phone number
    - Profile picture
 - Active user can change/update password
 - Active users can see their logs
    - Calender view
    - List view
    - Table view
 - Active users can participate in attendence system-
 - User can logout


 -- Requirement Analysis --

Models:

    User
     - Name
     - Email 
     - Password 
     - Roles 
     - Account status

    Profile
     - First Name 
     - Last Name
     - Phone Number 
     - Profile Picture 
     - User

    Student Attendence 
     - UserID
     - CreatedAt: DateTime
     - AttendenceID

    Admin Attendence
     - CreatedAt: DateTime 
     - Status [active/inactive]
     - Time Limit 

    Student Endpoints 
     - POST /auth/login [public]
     - POST /auth/register [public]
     - PATCH /profiles [private]
     - PATCH /profiles/avatar [private]
     - PUT /auth/change-password [private]
     - GET /timesheet [private]
     - GET /attendence [private]
     - GET /attendenceStatus [private]

    Admin Endpoints
     - GET /users [private]
     - POST /users [private]
     - PATCH /users/userID [private]
     - DELETE /users/userID [private]
     - GET /users/userID [private]
     - GET /profiles [private]
     - POST /profiles [private]
     - PATCH /profiles/profileID [private]
     - DELETE profiles/profileID [private]
     - GET /profiles/profileID [private]
     - GET /timesheet/userID [private]
     - POST /attendence/enable [private]
     - GET /attendence/disable/attendenceID [private]
     - GET /timesheet/stats


-- Step by step process --
1. Create Models
   - User
   - Profile 
   - Student Attendence 
   - Admin Attendence
2. Authentication
   - /register
   - /login 
   - /change-password 
3. MiddleWares
   - Authenticate
   - Authorize
4. TimeSheet & Attendence
   - GET /timesheet [private]
   - GET /attendence [private]
   - GET /attendenceStatus [private]
5. USER CRUD
   - Get user
   - Get user by ID 
   - Create user 
   - Update user 
   - Delete user 
6. Profile CRUD
   - Get profile 
   - Get profile by ID 
   - Create profile 
   - Update profile 
   - Delete profile
   - GET /timesheet/userID [private]
7. Admin control over Attendence
   - POST /attendence/enable [private]
   - GET /attendence/disable/attendenceID [private]
8. Generate Stats 
   - GET /timesheet/stats