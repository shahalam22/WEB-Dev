* {
    box-sizing: border-box;
}
.box {
    float: left;
    width: 33.33%;
    padding: 50px;
    height: 300px;
}
.clearfix::after {
    content: "";
    clear: both;
    display: table;
}

/*
However, this is not very flexible. It is ok if you can 
guarantee that the boxes will always have the same amount of 
content in them. But many times, the content is not the same. 
If you try the example above on a mobile phone, you will see 
that the second box's content will be displayed outside of the 
box. This is where CSS3 Flexbox comes in handy - as it can 
automatically stretch boxes to be as long as the longest box
*/

/*about flexBox*/

.flex-container {
    display: flex;
    flex-wrap: nowrap;
    background-color: DodgerBlue;
}
  
.flex-container .flexbox {
    background-color: #f1f1f1;
    width: 50%;
    margin: 10px;
    text-align: center;
    line-height: 55px;
    font-size: 20px;
}

/*Navigation Bar*/

ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: #333;
}
li {
    float: left;
}
li a {
    display: inline-block;
    color: white;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
}
a:hover {
    background-color: red;
}

/*Web layout example*/
.header, .footer {
    background-color: grey;
    color: white;
    padding: 15px;
}
.column {
    float: left;
    padding: 15px;
}
.clearfix::after {
    content: "";
    clear: both;
    display: table;
}
.menu {
    width: 25%;
}
.content {
    width: 75%;
}
.menu ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
}
.menu li {
    padding: 8px;
    margin-bottom: 8px;
    background-color: #33b5e5;
    color: #ffffff;
}
.menu li:hover {
    background-color: #0099cc;
}

/*display property*/
span.a {
    display: inline; /* the default for span */
    width: 100px;
    height: 100px;
    padding: 5px;
    border: 1px solid blue;  
    background-color: yellow; 
}
  
span.b {
    display: inline-block;
    width: 100px;
    height: 100px;
    padding: 5px;
    border: 1px solid blue;    
    background-color: yellow; 
}
  
span.c {
    display: block;
    width: 100px;
    height: 100px;
    padding: 5px;
    border: 1px solid blue;    
    background-color: yellow; 
}